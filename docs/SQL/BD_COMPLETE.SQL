-- Drop the database if it exists and create a new one
DROP DATABASE IF EXISTS STORE_DANI;

CREATE DATABASE STORE_DANI;

USE STORE_DANI;

-- Table for document types (ID, type)
CREATE TABLE DOCUMENT_TYPE (
  ID_DOCUMENT_TYPE INT AUTO_INCREMENT PRIMARY KEY,
  TYPE VARCHAR(45)
);

-- Table for roles (ID, role name, description)
CREATE TABLE ROLE (
  ID_ROLE INT AUTO_INCREMENT PRIMARY KEY,
  ROLE_NAME VARCHAR(50),
  DESCRIPTION TINYTEXT
);

-- Table for sellers (ID, name, surname, document type, document number, role, timestamps)
CREATE TABLE SELLER (
  ID_SELLER INT AUTO_INCREMENT PRIMARY KEY,
  FIRST_NAME VARCHAR(40),
  LAST_NAME VARCHAR(35),
  DOCUMENT_TYPE_ID INT,
  DOCUMENT_NUMBER VARCHAR(12),
  ROLE_ID INT,
  CREATED_AT TIMESTAMP,
  UPDATED_AT DATETIME,
  FOREIGN KEY (DOCUMENT_TYPE_ID) REFERENCES DOCUMENT_TYPE(ID_DOCUMENT_TYPE),
  FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ID_ROLE)
);

-- Table for general people (ID, name, surname, address, document type, document number, phone, timestamps)
CREATE TABLE PERSON (
  ID_PERSON INT AUTO_INCREMENT PRIMARY KEY,
  FIRST_NAME VARCHAR(30),
  LAST_NAME VARCHAR(30),
  ADDRESS VARCHAR(70),
  DOCUMENT_TYPE_ID INT,
  DOCUMENT_NUMBER VARCHAR(12),
  PHONE VARCHAR(12),
  CREATED_AT TIMESTAMP,
  UPDATED_AT DATETIME,
  FOREIGN KEY (DOCUMENT_TYPE_ID) REFERENCES DOCUMENT_TYPE(ID_DOCUMENT_TYPE)
);

-- Table for customers (ID, person reference)
CREATE TABLE CUSTOMER (
  ID_CUSTOMER INT AUTO_INCREMENT PRIMARY KEY,
  PERSON_ID INT,
  FOREIGN KEY (PERSON_ID) REFERENCES PERSON(ID_PERSON)
);

-- Table for suppliers (ID, name, NIT, phone, timestamps)
CREATE TABLE SUPPLIER (
  ID_SUPPLIER INT AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(50),
  NIT VARCHAR(12),
  PHONE VARCHAR(12),
  CREATED_AT TIMESTAMP,
  UPDATED_AT DATETIME
);

-- Table for product categories (ID, category, description)
CREATE TABLE CATEGORY (
  ID_CATEGORY INT AUTO_INCREMENT PRIMARY KEY,
  CATEGORY_NAME VARCHAR(50),
  DESCRIPTION TINYTEXT
);

-- Table for products (ID, product name, stock, price, timestamps)
CREATE TABLE PRODUCT (
  ID_PRODUCT INT AUTO_INCREMENT PRIMARY KEY,
  PRODUCT_NAME VARCHAR(50),
  STOCK INT,
  PRICE INT,
  CREATED_AT TIMESTAMP,
  UPDATED_AT DATETIME
);

-- Table to relate products to categories
CREATE TABLE PRODUCT_CATEGORY (
  ID_PRODUCT_CATEGORY INT AUTO_INCREMENT PRIMARY KEY,
  CATEGORY_ID INT,
  PRODUCT_ID INT,
  FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID_CATEGORY),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID_PRODUCT)
);

-- Table to relate products to suppliers
CREATE TABLE PRODUCT_SUPPLIER (
  ID_PRODUCT_SUPPLIER INT AUTO_INCREMENT PRIMARY KEY,
  PRODUCT_ID INT,
  SUPPLIER_ID INT,
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID_PRODUCT),
  FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(ID_SUPPLIER)
);

-- Table for invoice statuses (ID, status name, description)
CREATE TABLE INVOICE_STATUS (
  ID_INVOICE_STATUS INT AUTO_INCREMENT PRIMARY KEY,
  STATUS_NAME VARCHAR(50),
  DESCRIPTION TINYTEXT
);

-- Table for invoices (ID, customer ID, status ID, timestamps)
CREATE TABLE INVOICE (
  ID_INVOICE INT AUTO_INCREMENT PRIMARY KEY,
  CUSTOMER_ID INT,
  STATUS_ID INT,
  CREATED_AT TIMESTAMP,
  UPDATED_AT DATETIME,
  FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID_CUSTOMER),
  FOREIGN KEY (STATUS_ID) REFERENCES INVOICE_STATUS(ID_INVOICE_STATUS)
);

-- Table to relate products to invoices
CREATE TABLE INVOICE_PRODUCT (
  ID_INVOICE_PRODUCT INT AUTO_INCREMENT PRIMARY KEY,
  PRODUCT_ID INT,
  INVOICE_ID INT,
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID_PRODUCT),
  FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE(ID_INVOICE)
);

-- Table for order statuses
CREATE TABLE ORDER_STATUS (
  ID_ORDER_STATUS INT AUTO_INCREMENT PRIMARY KEY,
  STATUS_NAME VARCHAR(45)
);

-- Table for orders (ID, invoice ID, status ID, details)
CREATE TABLE `ORDER` (
  ID_ORDER INT AUTO_INCREMENT PRIMARY KEY,
  INVOICE_ID INT,
  STATUS_ID INT,
  DETAILS TINYTEXT,
  FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE(ID_INVOICE),
  FOREIGN KEY (STATUS_ID) REFERENCES ORDER_STATUS(ID_ORDER_STATUS)
);
